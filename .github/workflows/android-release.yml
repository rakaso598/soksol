name: Android Release Build (example)

on:
  workflow_dispatch:
  push:
    branches: ["main", "dev"]

jobs:
  build-android-release:
    runs-on: ubuntu-latest
    env:
      ANDROID_KEYSTORE_FILE: mobile/soksol_mobile/android/app/release.keystore
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Prepare keystore (from secret)
        if: ${{ secrets.ANDROID_KEYSTORE_BASE64 != '' }}
        run: |
          mkdir -p mobile/soksol_mobile/android/app
          echo "Decoding keystore to $ANDROID_KEYSTORE_FILE"
          echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 -d > "$ANDROID_KEYSTORE_FILE"
          ls -l "$ANDROID_KEYSTORE_FILE"

      - name: Make gradlew executable
        run: chmod +x mobile/soksol_mobile/android/gradlew

      - name: Build Android release (assembleRelease)
        working-directory: mobile/soksol_mobile/android
        run: |
          ./gradlew clean assembleRelease \
            -Pandroid.injected.signing.store.file="$GITHUB_WORKSPACE/$ANDROID_KEYSTORE_FILE" \
            -Pandroid.injected.signing.store.password="${{ secrets.KEYSTORE_PASSWORD }}" \
            -Pandroid.injected.signing.key.alias="${{ secrets.KEY_ALIAS }}" \
            -Pandroid.injected.signing.key.password="${{ secrets.KEY_PASSWORD }}"
        env:
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}

      - name: Upload release APK/AAB
        uses: actions/upload-artifact@v4
        with:
          name: android-release-artifacts
          path: |
            mobile/soksol_mobile/android/app/build/outputs/**/*.apk
            mobile/soksol_mobile/android/app/build/outputs/**/*.aab
